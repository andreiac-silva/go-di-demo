// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"context"
	"github.com/andreiac-silva/go-di-demo/book"
	"github.com/andreiac-silva/go-di-demo/cmd/setup"
	"github.com/andreiac-silva/go-di-demo/cmd/setup/database"
	"github.com/andreiac-silva/go-di-demo/cmd/setup/server"
	"github.com/andreiac-silva/go-di-demo/inventory"
	"github.com/google/wire"
	"net/http"
)

// Injectors from wire.go:

func InitApplication(ctx context.Context) (*http.Server, error) {
	string2 := _wireStringValue
	conn, err := database.NewPgConn(ctx, string2)
	if err != nil {
		return nil, err
	}
	repository := book.NewRepository(conn)
	inventoryRepository := inventory.NewRepository(conn)
	service := inventory.NewService(inventoryRepository)
	bookService := book.NewService(repository, service)
	handler := book.NewHandler(bookService)
	routerContainer := server.NewRouterContainer(handler)
	httpServer := server.NewHTTPServerForWire(routerContainer)
	return httpServer, nil
}

var (
	_wireStringValue = "tenant"
)

// wire.go:

var Container = wire.NewSet(book.Provider, inventory.Provider, setup.Provider)
